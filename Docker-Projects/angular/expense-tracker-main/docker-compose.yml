
services:
  expense_tracker:
    image: "${IMAGE_NAME}"
    restart: always
    ports:
      - 2206:80
    volumes:
      - expense_tracker:/usr/share/nginx/html
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: "1" #maxinmun cpu
          memory: 200M #maxinmum memory
        reservations:
          cpus: "0.25" # minimun cpu
          memory: 50M # minimum memory
      update_config:
        parallelism: 1 #The number of containers to rollback at a time
        delay: 10s #The time to wait between each container group's rollback
        failure_action: continue #What to do if a rollback fails. One of continue or pause (default pause)
        max_failure_ratio: 0.5 #Failure rate to tolerate during a rollback
        order: start-first 
        #Order of operations during rollbacks. 
        #One of stop-first (old task is stopped before starting new one), 
        # or start-first (new task is started first, and the running tasks briefly overlap) 
      restart_policy:
        condition: any
        #none, containers are not automatically restarted regardless of the exit status.
        #on-failure, the container is restarted if it exits due to an error, which manifests as a non-zero exit code.
        #any (default), containers are restarted regardless of the exit status.
        delay: 5s #How long to wait between restart attempts
        max_attempts: 3 #The maximum number of failed restart attempts allowed before giving up
        window: 60s #The amount of time to wait after a restart to determine whether it was successful
    healthcheck:
      test: ["CMD","curl","-f","http://localhost"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 60s
volumes:
  expense_tracker:


# networks:
#   redis-net:
#   db-net: