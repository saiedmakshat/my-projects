# Vagrant.configure("2") do |config|
#   config.vm.box = "bento/ubuntu-22.04"
# #bento/ubuntu-22.04 (virtualbox, 202502.21.0, (amd64))
# #centos/stream10    (virtualbox, 20250506.2, (amd64))
# #generic/rhel9      (virtualbox, 4.3.12, (amd64))
# #ubuntu/jammy64     (virtualbox, 20241002.0.0)
# #ubuntu/xenial64    (virtualbox, 20211001.0.5)
#   config.vm.provider "virtualbox" do |vb|
#     vb.gui = false
#     vb.memory = "2048"
#   end
 
#   config.vm.network "private_network", ip: "192.168.56.105"

#   config.vm.provision "shell", inline: <<-SHELL
#     # apt-get update
#     # apt-get install -y apache2
#     sudo apt update
#     sudo apt install fontconfig openjdk-21-jre -y
#     sudo wget -O /etc/apt/keyrings/jenkins-keyring.asc https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
#     echo "deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc]" https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
#     sudo apt update
#     sudo apt install jenkins -y
#   SHELL
  
# end
#IMAGE_NAME = "bento/ubuntu-16.04"
IMAGE_NAME = "bento/ubuntu-22.04"

N = 2

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false

    config.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 2
    end
      
    config.vm.define "jenkins-master" do |master|
        master.vm.box = IMAGE_NAME
        master.vm.network "private_network", ip: "192.168.56.10"
        master.vm.hostname = "jenkins-master"
        # master.vm.provision "ansible" do |ansible|
        #     ansible.playbook = "kubernetes-setup/master-playbook.yml"
        #     ansible.extra_vars = {
        #         node_ip: "192.168.50.10",
        #     }
        # end
        master.vm.provision "shell", inline: <<-SHELL
            # apt-get update
            # apt-get install -y apache2
            sudo apt update
            sudo apt install fontconfig openjdk-21-jre -y
            sudo wget -O /etc/apt/keyrings/jenkins-keyring.asc https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
            echo "deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc]" https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
            sudo apt update
            sudo apt install jenkins -y
            sudo apt-get update
            sudo apt-get install ca-certificates curl -y
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            # Add the repository to Apt sources:
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            sudo groupadd docker
            sudo usermod -aG docker $USER
            sudo usermod -aG docker jenkins
            newgrp docker

        SHELL
    end

    (1..N).each do |i|
        config.vm.define "jenkins-node-#{i}" do |node|
            node.vm.box = IMAGE_NAME
            node.vm.network "private_network", ip: "192.168.56.#{i + 10}"
            node.vm.hostname = "jenkins-node-#{i}"
            node.vm.provision "shell", inline: <<-SHELL
                # Add Docker's official GPG key:
                sudo apt-get update
                sudo apt-get install ca-certificates curl -y
                sudo install -m 0755 -d /etc/apt/keyrings
                sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
                sudo chmod a+r /etc/apt/keyrings/docker.asc

                # Add the repository to Apt sources:
                echo \
                  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
                  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                sudo apt-get update

                sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

                sudo groupadd docker
                sudo usermod -aG docker $USER
                #sudo usermod -aG docker jenkins
                newgrp docker
            SHELL
            
        end
    end
end